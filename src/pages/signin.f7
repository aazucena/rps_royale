<template>
    <div class="page" data-name="signin">
        <div class="page-content bg-color-primary">
            <div class="display-flex flex-direction-column w-100 justify-content-center h-50">
                <div class="display-flex flex-direction-column w-100 justify-content-start h-50">
                    <div class="display-flex flex-direction-row w-100 justify-content-center text-align-center">
                        <div class="title fsize-7 display-flex flex-direction-row w-88 justify-content-center color-white">Create new account</div>
                    </div>
                    <div class="display-flex flex-direction-column w-100 justify-content-center mt-6">
                        <div class="display-flex flex-direction-row w-100 justify-content-center">
                            <div class="display-flex flex-direction-column w-100 align-items-center">
                                <input class="form-control w-88" type="text" name="username" placeholder="Username" aria-label="username" />
                                <div class="invalid-text"></div>
                            </div>
                        </div>
                        <div class="display-flex flex-direction-row w-100 justify-content-center">
                            <div class="display-flex flex-direction-column w-100 align-items-center">
                                <input class="form-control w-88" type="email" name="email" placeholder="Email" aria-label="email" />
                                <div class="invalid-text"></div>
                            </div>
                        </div>
                        <div class="display-flex flex-direction-row w-100 justify-content-center">
                            <div class="display-flex flex-direction-column w-100 align-items-center">
                                <input class="form-control w-88" type="password" name="password" placeholder="Password"
                                    aria-label="password" />
                                <div class="invalid-text"></div>
                            </div>
                        </div>
                        <div class="display-flex flex-direction-row w-100 justify-content-center">
                            <div class="display-flex flex-direction-column w-100 align-items-center">
                                <input class="form-control w-88" type="password" name="repeat_password" placeholder="Repeat Password"
                                    aria-label="repeat password" />
                                <div class="invalid-text"></div>
                            </div>
                        </div>
                    </div>
                    <div class="display-flex flex-direction-column w-100 justify-content-space-evenly mt-10">
                        <div class="display-flex flex-direction-row w-100 justify-content-center">
                            <button class="button button-fill button-round color-secondary w-63 p-6" id="create_button">Sign-in</button>
                        </div>
                        <div class="display-flex flex-direction-row w-100 justify-content-center mt-6">
                            <span class="text-color-white fw-normal fsize-4">Have an account already? <a href="/login/"
                                    class='link fw-bolder color-secondary'>Login here</a></span>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</template>
<style>
</style>
<script>
    import directus from '@/js/services/directus.js'
    import { randomColor } from '@/js/services/utilities.js'
    export default async (props, { $, $f7, $on }) => {
        var roles = await directus.roles.readByQuery().then(({ data: role_data }) => role_data.at(0))
        let data = {}
        $on('pageInit', () => {
            $('input').on('keyup', (e) => {
                $(`input`).removeClass('is-invalid')
                $(`input`).text('')
            })
            $('input').on('click', (e) => {
                $(`input`).removeClass('is-invalid')
            })
            $('input').on('change', (e) => {
                data = {
                    ...data,
                    [e.target.name]: e.target.value
                }
            })
            $('button#create_button').on('click', () => {
                switch(true) {
                    case !!data.username === false:
                        $('input[name="username"]').addClass('is-invalid')
                        $('input[name="username"]+.invalid-text').text('Your username is not filled')
                        $('#create_button').addClass('vibrate-3')
                        break
                    case !!data.email === false:
                        $('input[name="email"]').addClass('is-invalid')
                        $('input[name="email"]+.invalid-text').text('Your email is not filled')
                        $('#create_button').addClass('vibrate-3')
                        break
                    case !!data.password === false:
                        $('input[name="password"]').addClass('is-invalid')
                        $('input[name="password"]+.invalid-text').text('Your password is not filled')
                        break
                    case !!data.repeat_password === false:
                        $('input[name="repeat_password"]').addClass('is-invalid')
                        $('input[name="repeat_password"]+.invalid-text').text('Your repeated password is not filled')
                        $('#create_button').addClass('vibrate-3')
                        break
                    case data.password !== data.repeat_password:
                        $('input[name="password"]').addClass('is-invalid')
                        $('input[name="repeat_password"]').addClass('is-invalid')
                        $('input[name="repeat_password"]+.invalid-text').text('Your repeated password is no the same as the password')
                        $('#create_button').addClass('vibrate-3')
                        break
                    default:
                        directus.users.createOne({
                            username: data.username, 
                            email: data.email, 
                            password: data.password, 
                            color: randomColor(),
                            role: roles.id
                        }).then(() => {
                            directus.auth.login({
                                email: data.email,
                                password: data.password,
                            }).then(() => {
                                let toast = $f7.toast.create({
                                    text: 'Successfully created your account.',
                                    position: 'center',
                                    closeTimeout: 1000,
                                    icon: `<i class="icon material-icons p-4" style="color: #198754;">check_circle</i>`,
                                })
                                toast.open()
                                window.f7.views.main.router.navigate(
                                    { path: '/' }, 
                                )
                            }).catch(() => {
                                let toast = $f7.toast.create({
                                    text: 'Failed to create your account.',
                                    position: 'center',
                                    closeTimeout: 1000,
                                    icon: `<i class="icon material-icons p-4" style="color: #dc3545;">error</i>`,
                                })
                                toast.open()
                            })
                        }).catch(() => {
                            let toast = $f7.toast.create({
                                text: 'Failed to create your account.',
                                position: 'center',
                                closeTimeout: 1000,
                                icon: `<i class="icon material-icons p-4" style="color: #dc3545;">error</i>`,
                            })
                            toast.open()
                        })
                        break
                }
                let t = setTimeout(() => {
                    $('#create_button').removeClass('vibrate-3')
                    clearTimeout(t)
                }, 400)
            })
        })
        return $render;
    }
</script>